[package]
name = "sov-mock-da"
description = "Mock implementation of Data Availability layer for testing purposes"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
readme = "README.md"
publish = true

[lints]
workspace = true

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
borsh = { workspace = true, features = ["bytes"] }
bytes = { workspace = true, features = ["serde"] }
derive_more = { workspace = true, features = ["from", "into"] }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true, optional = true }
hex = { workspace = true, features = ["serde"] }
sha2 = { workspace = true }
tokio = { workspace = true, optional = true, features = ["test-util"] }
futures = { workspace = true, optional = true, features = ["std"] }
tracing = { workspace = true }
sov-rollup-interface = { workspace = true }

# For storable service
sea-orm = { version = "0.12", features = [
	"sqlx-sqlite",
	"runtime-tokio-rustls",
	"macros",
	"with-chrono"], default-features = false, optional = true }
chrono = { workspace = true, optional = true }

[dev-dependencies]
bincode = { workspace = true }
futures = { workspace = true }
serde_json = { workspace = true }
sov-mock-da = { path = ".", features = ["native"] }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["test-util", "macros"] }
rand = { workspace = true }
testcontainers = { version = "0.18", features = ["blocking"] }
testcontainers-modules = { version = "0.6", features = ["postgres"] }

[features]
default = []
native = [
	"dep:chrono",
	"dep:futures",
	"dep:schemars",
	"dep:sea-orm",
	"dep:serde_json",
	"dep:tokio",
	"sov-mock-da/native",
	"sov-rollup-interface/native",
]
postgres = [ "native", "sea-orm/sqlx-postgres" ]
